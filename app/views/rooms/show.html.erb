
<!DOCTYPE html>
<html>
  <body>
  <h2>play the music</h2>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
   <div class="container">
      <div class="row">
        <div class="col-xs-12 col-md-4">
        <div class="body_show">
          <div class="box_video" style="background-image: linear-gradient(-225deg, rgba(0,0,0,0.5) 0%, rgba(0,0,0,0.2) 50%), url('https://slack-imgs.com//mc?c=1&url=https%3A%2F%2Fscontent-iad3-1.cdninstagram.com%2Ft51.2885-15%2Fe35%2F20589379_2000039293551612_5999224329236119552_n.jpg'); height: '400', width: '370'; background-size: cover; background-position: center">
          </div>

        <div class="col-xs-12 col-md-4">
           <!--  <iframe src="http://www.youtube.com/embed/ygfXKbcW8wQ?rel=0&autohide=0&#8243;"></iframe> -->
          <div class="player_audio">
            <i class="fa fa-play-circle button_player" aria-hidden="true"></i>
            <i class="fa fa-step-forward button_player" aria-hidden="true"></i>
            <i class="fa fa-pause-circle-o button_player " aria-hidden="true"></i>
          </div>
        </div>
            <div id="player" style="display: none;">

            <script>
              // 2. This code loads the IFrame Player API code asynchronously.
              var tag = document.createElement('script');
              tag.src = "https://www.youtube.com/iframe_api";
              var firstScriptTag = document.getElementsByTagName('script')[0];
              firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
               // 3. This function creates an <iframe> (and YouTube player)
              //    after the API code downloads.
              var player;
              function onYouTubeIframeAPIReady() {
                player = new YT.Player('player', {
                  height: '200',
                  width: '300',
                  videoId: 'M7lc1UVf-VE',
                  events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                  }
                });
              }
              // 4. The API will call this function when the video player is ready.
              function onPlayerReady(event) {
                event.target.playVideo();
              }
              // 5. The API calls this function when the player's state changes.
              //    The function indicates that when playing a video (state=1),
              //    the player should play for six seconds and then stop.
              var done = false;
              function onPlayerStateChange(event) {
                if (event.data == YT.PlayerState.PLAYING && !done) {
                  setTimeout(stopVideo, 6000);
                  done = true;
                }
              }
              function stopVideo() {
                player.stopVideo();
              }

              const play = document.querySelector(".fa-play-circle");
              const pause = document.querySelector(".fa-pause-circle-o");
              function playMusic (){
                player.playVideo();
              };
             function pauseMusic (){
                player.pauseVideo();
              };

              play.addEventListener("click", playMusic);
              pause.addEventListener("click", pauseMusic);

            </script>
            </div>
        </div>
        </div>
    </div>
  </body>
</html>
